library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

entity phi111_tb is
end phi111_tb;

architecture comportamento of phi111_tb is
	signal s_clk, s_inicio : std_logic := '0';
	signal s_reset : std_logic := '1';
	signal s_A, s_B : std_logic_vector(7 downto 0);
	signal s_pronto : std_logic;
	signal s_mult : std_logic_vector(7 downto 0);
	constant CLK_PERIOD : time := 10 ns;
begin
	dut : entity work.phi111_multiplicador
	port map(
		clk    => s_clk,
		reset  => s_reset,
		inicio => s_inicio,
		A      => s_A,
		B      => s_B,
		pronto => s_pronto,
		mult   => s_mult
	);

	s_clk <= not s_clk after CLK_PERIOD / 2;
	
	stimulus_proc: process
	begin
		-- 1. Fase de Reset
		s_reset <= '1';
		s_inicio <= '0';
		wait for 20 ns;

		-- 2. Fim do Reset e início da multiplicação 3 x 3
		s_reset <= '0';
		s_A <= "00000011"; -- A = 3
		s_B <= "00000011"; -- B = 3
		
		-- Gera um pulso no sinal 'inicio'
		s_inicio <= '1';
		wait for CLK_PERIOD;
		s_inicio <= '0';

		-- Aguarda a operação terminar
		wait until s_pronto = '1';

		-- Espera mais um pouco para visualização e termina
		wait for 50 ns;
		wait;
	end process;
end comportamento;